import React, { useState } from 'react';
import ExamplePhrase from './ExamplePhrase';

interface DropdownMenuProps {
    title: string;
    items: string[] | DropdownMenuProps[]; // –ò–∑–º–µ–Ω–µ–Ω–Ω—ã–π —Ç–∏–ø –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –≤–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç–∏
    icon?: string;
    text?: string;
    type?: "0" | "1"; // –ö–æ–Ω–∫—Ä–µ—Ç–∏–∑–∏—Ä–æ–≤–∞–ª–∏ —Ç–∏–ø
}

const DropdownMenu: React.FC<DropdownMenuProps> = ({ title, items, icon = 'üìö', text= "", type = "0"}) => {
    const [isOpen, setIsOpen] = useState(false);

    return (
        <div className="dropdown-menu">
            <button
                className="dropdown-toggle"
                onClick={() => setIsOpen(!isOpen)}
            >
                <span className="dropdown-toggle-content">
                    <span className="dropdown-toggle-icon">{icon}</span>
                    <span>{title}</span>
                </span>

                <span className={`dropdown-arrow ${isOpen ? 'open' : ''}`}>
                    ‚ñº
                </span>
            </button>

            <div className={`dropdown-content ${isOpen ? 'open' : 'closed'}`}>
                <div className="dropdown-content-container">
                    {/* –£—Å–ª–æ–≤–∏–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–∏–º–µ—á–∞–Ω–∏—è */}
                    {text && (
                        <div className="note">
                            <strong>–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:</strong> {text}
                        </div>
                    )}

                    <ul className="dropdown-list">
                        {items.map((item, index) => {
                            // –†–µ–Ω–¥–µ—Ä –¥–ª—è —Ç–∏–ø–∞ "1" (–≤–ª–æ–∂–µ–Ω–Ω—ã–µ DropdownMenu)
                            if (type === "1") {
                                const nestedProps = item as DropdownMenuProps;
                                return (
                                    <li key={index} className="dropdown-item">
                                        <div className="dropdown-item-container">
                                            <DropdownMenu {...nestedProps} />
                                        </div>
                                        {index < items.length - 1 && (
                                            <div className="dropdown-separator"></div>
                                        )}
                                    </li>
                                );
                            }

                            // –†–µ–Ω–¥–µ—Ä –¥–ª—è —Ç–∏–ø–∞ "0" (–æ–±—ã—á–Ω—ã–µ —Ñ—Ä–∞–∑—ã)
                            return (
                                <li key={index} className="dropdown-item">
                                    <div className="dropdown-item-container">
                                        <ExamplePhrase text={item as string} />
                                    </div>
                                    {index < items.length - 1 && (
                                        <div className="dropdown-separator"></div>
                                    )}
                                </li>
                            );
                        })}
                    </ul>
                </div>
            </div>
        </div>
    );
};

export default DropdownMenu;